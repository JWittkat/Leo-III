%%----------------------------------------------------------
%%
%%
%% Problems for the leo3 simplification algorithm
%%  for testing
%%
%%
%%----------------------------------------------------------

fof(ntrue, axiom, ~ $true).

fof(nfalse, axiom, ~ $false).

fof(eqand, axiom, p & p).

fof(neqand, axiom, p & (~ p)).

fof(equiv, axiom, p <=> p).

fof(tand, axiom, p & $true).

fof(fand, axiom, p & $false).

fof(implt, axiom, p => $true).

fof(implf, axiom, p => $false).

fof(equivt, axiom, p <=> $true).

fof(equivf, axiom, p <=> $false).

fof(eqor, axiom, p | p).

fof(neqor, axiom, p | (~ p)).

fof(eqimpl, axiom, p => p).

fof(ort, axiom, p | $true).

fof(orf, aixom, p | $false).

fof(timpl, axiom, $true => p).

fof(fimpl, axiom, $false => p).

fof(forallFree, axiom, ! [X] : p).

fof(existFree, axiom, ? [X] : p).

fof(cmplx1, axiom, ! [X] : p(X) <=> p(X)).
